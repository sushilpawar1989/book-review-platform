# Production Environment Configuration
spring:
  # Database Configuration for Production (H2 In-Memory)
  datasource:
    url: jdbc:h2:mem:bookreview;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      max-lifetime: 600000
      
  # H2 Console Configuration
  h2:
    console:
      enabled: ${SPRING_H2_CONSOLE_ENABLED:false}
      path: /h2-console
      
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:create-drop}
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: false
        
  # SQL Initialization Configuration
  sql:
    init:
      mode: ${SPRING_SQL_INIT_MODE:never}
      encoding: UTF-8
      
  # Cache Configuration for Production (No Cache)
  cache:
    type: none
      
  # Security Configuration for Production
  security:
    jwt:
      secret: ${JWT_SECRET:}
      expiration: 86400000 # 24 hours
      refresh-expiration: 604800000 # 7 days
      
# Server Configuration for Production
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  forward-headers-strategy: native
  
# Management Configuration for Production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
      
# Logging Configuration for Production
logging:
  level:
    com.bookreview: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/book-review-platform.log
    max-size: 100MB
    max-history: 30
    
# OpenAI Configuration for Production
openai:
  api:
    key: ${OPENAI_API_KEY:}
    model: gpt-4
    timeout: 30000 # 30 seconds
    
# Application Configuration for Production
app:
  cors:
    allowed-origins: ${ALLOWED_ORIGINS:https://bookreview.example.com}
    
  recommendation:
    cache-ttl: 3600 # 1 hour
